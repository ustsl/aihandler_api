"""user models

Revision ID: cb93492dac36
Revises: 6c4ccfdec6d5
Create Date: 2024-04-16 13:35:40.182196

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "cb93492dac36"
down_revision: Union[str, None] = "6c4ccfdec6d5"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("telegram_id", sa.String(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("telegram_id"),
    )
    op.create_table(
        "accounts",
        sa.Column("account_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("balance", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column("time_create", sa.DateTime(timezone=True), nullable=True),
        sa.Column("time_update", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.uuid"],
        ),
        sa.PrimaryKeyConstraint("account_id"),
    )
    op.create_table(
        "tokens",
        sa.Column("token_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("token", sa.String(), nullable=False),
        sa.Column("time_create", sa.DateTime(timezone=True), nullable=True),
        sa.Column("time_update", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.uuid"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("token_id"),
        sa.UniqueConstraint("user_id"),
    )
    op.add_column("prompts", sa.Column("is_open", sa.Boolean(), nullable=False))
    op.add_column("prompts", sa.Column("account_id", sa.UUID(), nullable=False))
    op.create_foreign_key(None, "prompts", "accounts", ["account_id"], ["account_id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "prompts", type_="foreignkey")
    op.drop_column("prompts", "account_id")
    op.drop_column("prompts", "is_open")
    op.drop_table("tokens")
    op.drop_table("accounts")
    op.drop_table("users")
    # ### end Alembic commands ###
